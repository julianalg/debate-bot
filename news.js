const { newsAPIKey, openAIKey} = require('./config.json');
const { OpenAI } = require('openai');
const client = new OpenAI({
  apiKey: openAIKey,
});

let lastArticleGrabbed;
let firstIteration = true;

async function getNews() {
  let index = 0;
  // The URL of the API endpoint.
  // This should be the same endpoint your Node.js server (from the first example) is hosting.
  const apiUrl = 'https://newsapi.org/v2/top-headlines?country=us&apiKey=' + newsAPIKey;
  
  console.log(`Attempting to call API at: ${apiUrl}`);
  
  try {
    // 1. Use the `fetch()` function to make the network request.
    // `fetch` is available globally in Node.js v18+ and later.
    // For older versions, you might use a library like 'axios' or 'node-fetch'.
    const response = await fetch(apiUrl);
    
    // 2. Check if the response was successful (status code 200-299).
    // If not, throw an error to be caught by the catch block.
    if (!response.ok) {
      throw new Error(`HTTP error! Status: ${response.status}`);
    }
    
    // 3. Parse the response body as JSON.
    // The .json() method is also asynchronous.
    const data = await response.json();
    let firstArticle = data.articles && data.articles.length > index ? data.articles[index] : null;

    if (!firstIteration) {  
      while (lastArticleGrabbed.title == firstArticle.title) {
        console.log('No new articles found, returning last article.');
        index++;
        firstArticle = data.articles && data.articles.length > index ? data.articles[index] : null;
      }
    }
    firstIteration = false;
    const firstArticleTitle = firstArticle ? firstArticle.title : 'No articles found';    
    
    // 4. Display the data in the console.
    // We use console.log because there is no browser or DOM in a Node.js script.
    console.log(`Grabbed article: ${firstArticleTitle}`);

    const prompt = "You are a news summarizer. Please summarize the following news article:\n\n" + (firstArticle.content ? firstArticle.content : firstArticle.description) + "\n\nProvide any social, economic, or political implications of the news article.";

    const ai = await client.responses.create({
      model: "gpt-4.1",
      input: prompt,
    });
    
    lastArticleGrabbed = firstArticle;
    return `**${firstArticleTitle}**\n${ai.output_text}\n[Read the original article here.](${firstArticle.url}) This message was generated by AI and it could be wrong. Double check important info.`;

  } catch (error) {
    // 5. If any error occurs during the fetch or parsing, catch it here.
    console.error('\n--- Error Fetching API ---');
    console.error(error.message);
    console.error('Please ensure the Node.js server is running and accessible at the specified URL.');
    console.error('--------------------------\n');
  }
}

// simple getter
function getLastArticle() {
  return lastArticleGrabbed;
}

module.exports = { getNews, getLastArticle };
